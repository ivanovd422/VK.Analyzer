apply plugin: 'io.gitlab.arturbosch.detekt'

detekt {
    config = files("$rootDir/lint/detekt-config.yml")
    //Optional baseline, uncomment & run gradle command detektBaseline to exclude existing issues
    //baseline = file("detekt-baseline.xml")

    parallel = true                                         // Builds the AST in parallel. Rules are always executed in parallel. Can lead to speedups in larger projects. `false` by default.
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = false // activate all available (even unstable) rules.
    config = files("$rootDir/lint/detekt-config.yml")            // Define the detekt configuration(s) you want to use. Defaults to the default detekt configuration.

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
        sarif.enabled = true // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning
    }
}

static def isLinuxOrMacOs() {
    def osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)
    return osName.contains('linux') || osName.contains('mac os') || osName.contains('macos')
}

task copyGitHooks(type: Copy) {
    description "Copies the git hooks from ${rootDir}/binar-common-config-android/hooks to the .git folder."
    from("${rootDir}/lint/") {
        include '**/*.sh'
        rename '(.*).sh', '$1'
    }
    into "${rootDir}/.git/hooks"
    onlyIf { isLinuxOrMacOs() }
}

task installGitHooks(type: Exec) {
    description "Installs the pre-commit git hooks from ${rootDir}/binar-common-config-android/hooks."
    group 'git hooks'
    workingDir rootDir
    commandLine 'chmod'
    args '-R', '+x', '.git/hooks/'
    dependsOn copyGitHooks
    onlyIf { isLinuxOrMacOs() }
    doLast {
        println('Git hook installed successfully.')
    }
}